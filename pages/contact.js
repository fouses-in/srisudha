import Head from "next/head";
import React from "react";
import Header from "../components/layout/header";
import HeroImage from "../components/common/headerImage";
import CustomBorder from "../components/common/border";
import CustomInput from "../components/common/customInput";
import CompanyList from "../components/common/companies";
import { Formik } from "formik";
import axios from "axios";
import * as Yup from "yup";
import { toast } from "react-toastify";
import { url } from "../constants";
import Footer from "../components/layout/footer";

const schema = new Yup.ObjectSchema({
  name: Yup.string().required("Name is required"),
  number: Yup.string().required("Number is required"),
  email: Yup.string().required("Email is required"),
  description: Yup.string().required("Description is required"),
});

export default function Contact() {
  return (
    <div className="bg-white overflow-scroll no-scrollbar h-screen">
      <Head>
        <title>Home-Srisudha Consultancy</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <HeroImage title="Contact" subtitle="Home - Contact Us" />
      <div className="bg-blue-50 py-20">
        <div className="  grid md:grid-cols-2 gap-16 mx-auto px-6 xl:px-0  max-w-monitor">
          <div>
            <div className="flex gap-4 text-primary items-center">
              <CustomBorder width="w-12" />
              <p className="text-black font-medium">Contact Us</p>
            </div>
            <h2 className="text-[32px] lg:text-[46px] mt-4 max-w-xl text-black font-semibold leading-[32px] lg:leading-[56px] ">
              If need any info{" "}
              <p>
                please contact <span className="text-primary">us!</span>
              </p>
            </h2>
            <div className="mt-14 gap-14 flex flex-col">
              {[
                {
                  icon: "fa-solid fa-location-dot",
                  label: "Head office address:",
                  value:
                    "Flat No. 2c,Thygaraja Complex,Periyar E.V.R,Salai,Kilpauk Chennai-600010",
                },

                {
                  icon: "fa-solid fa-envelope",
                  label: "Mail for information:",
                  value: "Sreenivasarao@asrfca.com",
                  another: "Rajeshkumar@asrfca.com",
                },
                {
                  label: "Call for help:",
                  icon: "fa-solid fa-phone",
                  value: "+91 9843045936",
                  another: "+91 9843045936",
                },
              ].map((value, index) => (
                <div key={index} className="flex gap-6 w-full">
                  <section className=" w-12 flex-shrink-0 h-12 flex items-center justify-center self-start mt-2 rounded-full bg-primary bg-opacity-60 ">
                    <i className={`${value.icon} text-black  text-xl`}></i>
                  </section>
                  <section className=" max-w-sm">
                    <h2 className="font-semibold font-Bitter text-lg lg:text-xl text-black">
                      {value.label}
                    </h2>
                    <div className="mt-2  text-gray-600 font-normal">
                      <h3>{value.value}</h3>
                      {value.another && <h3>{value.another}</h3>}
                    </div>
                  </section>
                </div>
              ))}
            </div>
          </div>
          <div>
            <p className="text-gray-500">
              Fields marked with an * are required
            </p>
            <Formik
              validationSchema={schema}
              initialValues={{
                name: "",
                email: "",
                number: "",
                description: "",
              }}
              onSubmit={async (values, { setSubmitting, resetForm }) => {
                try {
                  setSubmitting(true);
                  const { data } = await axios.post(
                    `${url}/add/contact`,
                    values
                  );
                  resetForm({
                    values: {
                      name: "",
                      email: "",
                      number: "",
                      description: "",
                    },
                  });
                  toast.success("Thank you for contacting with us.");
                } catch (err) {
                  toast.error(
                    err?.response?.data?.message ?? "Something went wrong"
                  );
                }
              }}
            >
              {({
                values,
                errors,
                touched,
                handleChange,
                handleSubmit,
                setFieldValue,
                isSubmitting,
              }) => {
                return (
                  <div>
                    <div className="mt-6 flex flex-col gap-8">
                      <CustomInput
                        value={values.name}
                        onChange={handleChange}
                        name="name"
                        errors={errors}
                        touched={touched}
                        label="Name*"
                        title={true}
                        placeholder={"Enter your full name"}
                      />
                      <CustomInput
                        value={values.email}
                        onChange={handleChange}
                        name="email"
                        errors={errors}
                        touched={touched}
                        label="Email*"
                        title={true}
                        type="email"
                        placeholder={"Enter your email address"}
                      />
                      <CustomInput
                        value={values.number}
                        onChange={handleChange}
                        name="number"
                        errors={errors}
                        touched={touched}
                        label="Phone Number*"
                        title={true}
                        placeholder={"Enter your phone number"}
                      />
                      <CustomInput
                        value={values.description}
                        onChange={handleChange}
                        name="description"
                        errors={errors}
                        touched={touched}
                        textarea={true}
                        height={"h-44"}
                        label="Description*"
                        title={true}
                        placeholder={"Please elaborate your requirements"}
                      />
                    </div>
                    <button
                      onClick={handleSubmit}
                      className="mt-12 bg-primaryText text-white uppercase w-40 h-10 text-sm"
                    >
                      {isSubmitting ? "Processing" : "Submit"}
                    </button>
                  </div>
                );
              }}
            </Formik>
          </div>
        </div>
      </div>

      <Footer />
    </div>
  );
}
